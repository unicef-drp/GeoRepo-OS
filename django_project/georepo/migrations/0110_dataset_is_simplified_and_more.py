# Generated by Django 4.0.7 on 2023-09-19 01:18

import os
from django.db import migrations, models
import django.utils.timezone
from georepo.utils.directory_helper import (
    get_folder_size
)


def forwards_func(apps, schema_editor):
    DatasetView = apps.get_model("georepo", "DatasetView")
    db_alias = schema_editor.connection.alias
    ds_views = DatasetView.objects.using(db_alias).all()

    for ds_view in ds_views:
        # ds_view.product_sync_status = 'synced'
        ds_view.vector_tile_sync_status = 'synced'
        ds_view.save()

        DatasetViewResource = apps.get_model("georepo", "DatasetViewResource")
        db_alias = schema_editor.connection.alias
        ds_view_resources = DatasetViewResource.objects.using(db_alias).filter(
            dataset_view=ds_view
        )

        for dsv_resource in ds_view_resources:
            fields = [
                'vector_tile_sync_status',
                # 'geojson_sync_status',
                # 'shapefile_sync_status',
                # 'kml_sync_status',
                # 'topojson_sync_status'
            ]
            for field in fields:
                setattr(dsv_resource, field, 'synced')

            if dsv_resource.entity_count > 0:
                fields = [
                    'vector_tiles',
                    # 'geojson',
                    # 'shapefile',
                    # 'kml',
                    # 'topojson'
                ]
                for field in fields:
                    setattr(dsv_resource, f'{field}_progress', 100)
                    output_path = os.path.join(
                        'home', 'web', 'media', 'export_data', field, str(dsv_resource.uuid)
                    )
                    setattr(dsv_resource, f'{field}_size', get_folder_size(output_path))


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('georepo', '0109_datasetviewresourcelog'),
    ]

    operations = [
        migrations.AddField(
            model_name='dataset',
            name='is_simplified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='datasetview',
            name='is_tiling_config_match',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='datasetview',
            name='product_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetview',
            name='product_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetview',
            name='vector_tile_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetview',
            name='vector_tiles_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='data_product_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='geojson_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='geojson_size',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='geojson_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='kml_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='kml_size',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='kml_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='product_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='product_task_id',
            field=models.CharField(blank=True, default='', max_length=256),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='product_updated_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='shapefile_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='shapefile_size',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='shapefile_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='topojson_progress',
            field=models.FloatField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='topojson_size',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='topojson_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AddField(
            model_name='datasetviewresource',
            name='vector_tile_sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='sync_status',
            field=models.CharField(choices=[('out_of_sync', 'Out of Sync'), ('syncing', 'Syncing'), ('synced', 'Synced')], default='out_of_sync', max_length=15),
        ),
        # products have been removed
        # migrations.RunPython(forwards_func, reverse_func,
        #                      hints={'model_name': 'TestVariable'})
    ]
